{"version":3,"sources":["components/TodosInputForm.jsx","components/TodoItem.jsx","components/TodosList.jsx","components/Modal.jsx","pages/TodosPage.jsx","reducer/todos/actions.js"],"names":["useStyles","createUseStyles","todosInputForm","display","flexDirection","form","buttons","justifyContent","TodosInputForm","onSubmit","classes","useState","showForm","setShowForm","value","setValue","urgency","setUrgency","toggleForm","prevValue","handleUrgencyChange","e","target","className","preventDefault","newTodo","date","Date","now","isDone","TextField","label","onChange","type","checked","Button","color","onClick","variant","makeStyles","todosItem","marginTop","TodosItem","todo","id","onToggle","onDelete","formattedDate","moment","format","Card","CardActionArea","CardContent","Divider","CardActions","Checkbox","inputProps","IconButton","aria-label","component","areEqual","prevProps","nextProps","React","memo","todosList","overflow","TodosList","todos","map","TodoItem","backdrop","position","top","right","bottom","left","backgroundColor","alignItems","modal","width","height","padding","Modal","children","onClose","stopPropagation","TodosPage","isLoading","setIsLoading","showModal","setShowModal","currentTodo","setCurrentTodo","dispatch","useDispatch","useSelector","state","items","handleCancelModal","loading","find","types","TODO_ADD","payload","addTodo","TODO_DELETE"],"mappings":"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","file":"static/js/TodosPage.69275d7a.chunk.js","sourcesContent":["import { useState } from 'react';\nimport { createUseStyles } from 'react-jss';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = createUseStyles({\n  todosInputForm: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  form: {\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n});\n\nconst TodosInputForm = ({ onSubmit }) => {\n  const classes = useStyles();\n  const [showForm, setShowForm] = useState(false);\n  const [value, setValue] = useState('');\n  const [urgency, setUrgency] = useState('low');\n\n  const toggleForm = () => setShowForm((prevValue) => !prevValue);\n  const handleInputChange = (e) => setValue(e.target.value);\n  const handleUrgencyChange = (e) => setUrgency(e.target.value);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (!value) return;\n\n    const newTodo = {\n      // id: Date.now(),\n      date: Date.now(),\n      isDone: false,\n      value,\n      urgency,\n    };\n\n    onSubmit(newTodo);\n    setValue('');\n    setUrgency('low');\n    setShowForm(false);\n  };\n\n  return (\n    <div className={classes.todosInputForm}>\n      {showForm ? (\n        <form className={classes.form} onSubmit={handleSubmit}>\n          <TextField\n            label=\"Enter todo\"\n            value={value}\n            onChange={handleInputChange}\n          />\n\n          <div>\n            <span>urgency:</span>\n\n            <label>\n              <input\n                type=\"radio\"\n                value=\"low\"\n                checked={urgency === 'low'}\n                onChange={handleUrgencyChange}\n              />\n              <span>low</span>\n            </label>\n\n            <label>\n              <input\n                type=\"radio\"\n                value=\"medium\"\n                checked={urgency === 'medium'}\n                onChange={handleUrgencyChange}\n              />\n              <span>medium</span>\n            </label>\n\n            <label>\n              <input\n                type=\"radio\"\n                value=\"high\"\n                checked={urgency === 'high'}\n                onChange={handleUrgencyChange}\n              />\n              <span>high</span>\n            </label>\n          </div>\n\n          <div className={classes.buttons}>\n            <Button color=\"primary\" onClick={toggleForm}>\n              Cancel\n            </Button>\n\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n              Add todo\n            </Button>\n          </div>\n        </form>\n      ) : (\n        <Button variant=\"contained\" color=\"primary\" onClick={toggleForm}>\n          + Add todo\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default TodosInputForm;\n","import React from 'react';\nimport moment from 'moment';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  IconButton,\n  Checkbox,\n  CardActionArea,\n  Divider,\n} from '@material-ui/core';\nimport DeleteTwoToneIcon from '@material-ui/icons/DeleteTwoTone';\n\nconst useStyles = makeStyles({\n  todosItem: {\n    marginTop: 10,\n    // backgroundColor: 'rgba(255,255,255,0)',\n  },\n});\n\nconst TodosItem = ({\n  todo: { id, value, urgency, date, isDone },\n  onToggle,\n  onDelete,\n}) => {\n  const classes = useStyles();\n  const formattedDate = moment(date).format('YYYY/MM/DD hh:mm:ss');\n\n  const handleDelete = () => onDelete(id);\n  const handleToggle = () => onToggle(id);\n\n  return (\n    <Card className={classes.todosItem}>\n      <CardActionArea>\n        <CardContent>\n          <p>{value}</p>\n          <p>{urgency}</p>\n          <p>{formattedDate}</p>\n        </CardContent>\n\n        <Divider />\n        <CardActions>\n          <Checkbox\n            checked={isDone}\n            onChange={handleToggle}\n            color=\"primary\"\n            inputProps={{ 'aria-label': 'secondary checkbox' }}\n          />\n\n          <IconButton\n            color=\"primary\"\n            aria-label=\"upload picture\"\n            component=\"span\"\n            onClick={handleDelete}\n          >\n            <DeleteTwoToneIcon />\n          </IconButton>\n        </CardActions>\n      </CardActionArea>\n    </Card>\n  );\n};\n\nconst areEqual = (prevProps, nextProps) => {\n  return prevProps.todo.isDone === nextProps.todo.isDone;\n};\n\nexport default React.memo(TodosItem, areEqual);\n","import TodoItem from './TodoItem';\nimport { makeStyles } from '@material-ui/core/styles';\n// import cat from '../images/cat.jpg';\n\nconst useStyles = makeStyles({\n  todosList: {\n    // background: `url(${cat})`,\n    overflow: 'auto',\n  },\n});\n\nconst TodosList = ({ todos, onDelete, onToggle }) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.todosList}>\n      {/* <img src={cat} alt=\"cat\" width=\"200px\" /> */}\n      {todos.map((todo) => (\n        <TodoItem\n          key={todo.id}\n          todo={todo}\n          onDelete={onDelete}\n          onToggle={onToggle}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default TodosList;\n","import { useEffect } from 'react';\nimport { createUseStyles } from 'react-jss';\n\nconst useStyles = createUseStyles({\n  backdrop: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    backgroundColor: 'rgba(0,0,0, .5)',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  modal: {\n    width: 500,\n    height: 300,\n    padding: 20,\n    backgroundColor: 'white',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n\nconst Modal = ({ children, onClose }) => {\n  const classes = useStyles();\n\n  const handleOnClose = () => {\n    onClose();\n  };\n\n  return (\n    <div className={classes.backdrop} onClick={handleOnClose}>\n      <div className={classes.modal} onClick={(e) => e.stopPropagation()}>\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { createUseStyles } from 'react-jss';\nimport TodosInputForm from '../components/TodosInputForm';\nimport TodosList from '../components/TodosList';\nimport Modal from '../components/Modal';\n// import Loader from '../components/Loader';\nimport ClipLoader from 'react-spinners/ClipLoader';\nimport { addTodo, deleteTodo } from '../reducer/todos/actions';\n// import {\n//   getTodos,\n//   createTodo,\n//   deleteTodo,\n//   updateTodo,\n// } from '../utils/todosAPI';\n// import { toast } from 'react-toastify';\n\nconst useStyles = createUseStyles({\n  todos: {\n    display: 'flex',\n    flexDirection: 'column',\n    overflow: 'hidden',\n  },\n});\n\nconst TodosPage = () => {\n  const classes = useStyles();\n  const [isLoading, setIsLoading] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const [currentTodo, setCurrentTodo] = useState();\n\n  const dispatch = useDispatch();\n  const todos = useSelector((state) => state.todos.items);\n\n  const handleSubmit = (todo) => {\n    if (todos.find(({ value }) => value === todo.value)) return;\n\n    dispatch(addTodo(todo));\n\n    // setIsLoading(true);\n    // createTodo(todo)\n    //   .then((data) => setTodos((prevState) => [data, ...prevState]))\n    //   .catch((error) =>\n    //     toast(error.message, {\n    //       type: 'error',\n    //     }),\n    //   )\n    //   .finally(() => setIsLoading(false));\n  };\n\n  const handleDeleteTodo = (id) => {\n    setCurrentTodo(todos.find((todo) => todo.id === id));\n    setShowModal(true);\n  };\n\n  const handleCancelModal = () => {\n    setShowModal(false);\n  };\n\n  const handleOkModal = () => {\n    setShowModal(false);\n\n    dispatch(deleteTodo(currentTodo.id));\n\n    // setIsLoading(true);\n    // deleteTodo(currentTodo.id)\n    //   .then((id) =>\n    //     setTodos((prevState) => prevState.filter((todo) => todo.id !== id)),\n    //   )\n    //   .then(() =>\n    //     toast(`\"${currentTodo.value}\" is successfully deleted`, {\n    //       type: 'success',\n    //     }),\n    //   )\n    //   .catch((error) =>\n    //     toast(error.message, {\n    //       type: 'error',\n    //     }),\n    //   )\n    //   .finally(() => setIsLoading(false));\n  };\n\n  const handleToggleTodo = (id) => {\n    const todo = todos.find((todo) => todo.id === id);\n\n    setIsLoading(true);\n\n    // updateTodo(id, { isDone: !todo.isDone })\n    //   .then((updatedToto) =>\n    //     setTodos((prevState) =>\n    //       prevState.map((todo) =>\n    //         todo.id === updatedToto.id ? updatedToto : todo,\n    //       ),\n    //     ),\n    //   )\n    //   .catch((error) =>\n    //     toast(error.message, {\n    //       type: 'error',\n    //     }),\n    //   )\n    //   .finally(() => setIsLoading(false));\n  };\n\n  // const handleSubmit = (data) => {\n  //   const { firstName, lastName } = data;\n  //   const updatedFirstName = `${firstName} fdghjkl`;\n\n  //   const payload = {\n  //     lastName,\n  //     firstName: updatedFirstName,\n  //   };\n\n  //   fetch(payload);\n  // };\n\n  // componentDidMount\n  // useEffect(() => {\n  //   setIsLoading(true);\n\n  //   getTodos()\n  //     .then((result) => setTodos(result))\n  //     .catch((error) =>\n  //       toast(error.message, {\n  //         type: 'error',\n  //       }),\n  //     )\n  //     .finally(() => setIsLoading(false));\n  // }, []);\n\n  return (\n    <div className={classes.todos}>\n      <h1>Todos</h1>\n\n      <ClipLoader loading={isLoading} />\n\n      {!isLoading && (\n        <>\n          <TodosInputForm onSubmit={handleSubmit} />\n          <TodosList\n            todos={todos}\n            onDelete={handleDeleteTodo}\n            onToggle={handleToggleTodo}\n          />\n        </>\n      )}\n\n      {showModal && (\n        <Modal onClose={handleCancelModal}>\n          <>\n            <h2>Do you really want to delete:</h2>\n            <p>{currentTodo.value}</p>\n\n            <div className=\"buttons\">\n              <button onClick={handleCancelModal}>Cancel</button>\n              <button onClick={handleOkModal}>Ok</button>\n            </div>\n          </>\n        </Modal>\n      )}\n    </div>\n  );\n};\n\n// const mapStateToProps = (state) => ({\n//   todos: state.todos,\n// });\n\n// export default connect(mapStateToProps)(TodosPage);\n\nexport default TodosPage;\n","import types from './types';\n\nexport const addTodo = (todo) => ({\n  type: types.TODO_ADD,\n  payload: todo,\n});\n\nexport const deleteTodo = (id) => ({\n  type: types.TODO_DELETE,\n  payload: id,\n});\n"],"sourceRoot":""}